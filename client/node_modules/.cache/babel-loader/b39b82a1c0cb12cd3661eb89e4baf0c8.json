{"ast":null,"code":"import _slicedToArray from\"/Users/chloepeng/Documents/GitHub/Real-Estate-4/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React, { useState } from \"react\";\n// // import { button, error, input, div, label } from \"../styles/button\";\n// import { createBrowserHistory } from 'history';\n// import { Link, useNavigate, Redirect, Route } from \"react-router-dom\";\n// function LoginForm({ onLogin }) {\n// const [username, setUsername] = useState(\"\");\n// const [password, setPassword] = useState(\"\");\n// const [errors, setErrors] = useState([]);\n// const [isLoading, setIsLoading] = useState(false);\n// const history = createBrowserHistory();\n// function handleSubmit(e) {\n// e.preventDefault();\n// setIsLoading(true);\n// fetch(\"/login\", {\n//     method: \"POST\",\n//     headers: {\n//     \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify({ username, password }),\n// }).then((r) => {\n//     setIsLoading(false);\n//     if (r.ok) {\n//     r.json().then((user) => {\n//         onLogin(user);\n//   return history.push(\"/\")\n//     })\n//     } else {\n//     r.json().then((err) => setErrors(err.errors));\n//     }\n// });\n// }\n// return (\n// <form onSubmit={handleSubmit} >\n//     <div>\n//     <label htmlFor=\"username\">Username</label>\n//     <input\n//         type=\"text\"\n//         id=\"username\"\n//         autoComplete=\"off\"\n//         value={username}\n//         onChange={(e) => setUsername(e.target.value)}\n//     />\n//     </div>\n//     <div>\n//     <label For=\"password\">Password</label>\n//     <input\n//         type=\"password\"\n//         id=\"password\"\n//         autoComplete=\"current-password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//     />\n//     </div>\n//     <div>\n//     <button variant=\"fill\" color=\"primary\" type=\"submit\">\n//         {isLoading ? \"Loading...\" : \"Login\"}\n//     </button>\n//     </div>\n//     <div>\n//         {errors.map((err) => (\n//         <error key={err}>{err}</error>\n//     ))}\n//     </div>\n// </form>\n// );\n// }\n// export default LoginForm;\nimport React,{useState}from\"react\";import{Button,Error,Input,FormField,Label}from\"../styles\";import{Link,useNavigate}from\"react-router-dom\";import{Redirect,Route}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function LoginForm(_ref){var onLogin=_ref.onLogin;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),errors=_useState6[0],setErrors=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isLoading=_useState8[0],setIsLoading=_useState8[1];var history=useNavigate();function handleSubmit(e){e.preventDefault();setIsLoading(true);fetch(\"/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username:username,password:password})}).then(function(r){setIsLoading(false);if(r.ok){r.json().then(function(user){onLogin(user);console.log(\"logged in\");history.push(\"/ingredients\");});}else{r.json().then(function(err){return setErrors(err.errors);});}});}return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(FormField,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"username\",children:\"Username\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",id:\"username\",autoComplete:\"off\",value:username,onChange:function onChange(e){return setUsername(e.target.value);}})]}),/*#__PURE__*/_jsxs(FormField,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(Input,{type:\"password\",id:\"password\",autoComplete:\"current-password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(FormField,{children:/*#__PURE__*/_jsx(Button,{variant:\"fill\",color:\"primary\",type:\"submit\",children:isLoading?\"Loading...\":\"Login\"})}),/*#__PURE__*/_jsx(FormField,{children:errors.map(function(err){return/*#__PURE__*/_jsx(Error,{children:err},err);})})]});}export default LoginForm;","map":{"version":3,"names":["React","useState","Button","Error","Input","FormField","Label","Link","useNavigate","Redirect","Route","LoginForm","onLogin","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","history","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","ok","json","user","console","log","push","err","target","value","map"],"sources":["/Users/chloepeng/Documents/GitHub/Real-Estate-4/client/src/components/LoginForm.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// // import { button, error, input, div, label } from \"../styles/button\";\n// import { createBrowserHistory } from 'history';\n// import { Link, useNavigate, Redirect, Route } from \"react-router-dom\";\n\n// function LoginForm({ onLogin }) {\n// const [username, setUsername] = useState(\"\");\n// const [password, setPassword] = useState(\"\");\n// const [errors, setErrors] = useState([]);\n// const [isLoading, setIsLoading] = useState(false);\n\n// const history = createBrowserHistory();\n\n// function handleSubmit(e) {\n// e.preventDefault();\n// setIsLoading(true);\n// fetch(\"/login\", {\n//     method: \"POST\",\n//     headers: {\n//     \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify({ username, password }),\n// }).then((r) => {\n//     setIsLoading(false);\n//     if (r.ok) {\n//     r.json().then((user) => {\n//         onLogin(user);\n//   return history.push(\"/\")\n//     })\n//     } else {\n//     r.json().then((err) => setErrors(err.errors));\n//     }\n// });\n// }\n\n// return (\n// <form onSubmit={handleSubmit} >\n//     <div>\n//     <label htmlFor=\"username\">Username</label>\n//     <input\n//         type=\"text\"\n//         id=\"username\"\n//         autoComplete=\"off\"\n//         value={username}\n//         onChange={(e) => setUsername(e.target.value)}\n//     />\n//     </div>\n//     <div>\n//     <label For=\"password\">Password</label>\n//     <input\n//         type=\"password\"\n//         id=\"password\"\n//         autoComplete=\"current-password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//     />\n//     </div>\n//     <div>\n//     <button variant=\"fill\" color=\"primary\" type=\"submit\">\n//         {isLoading ? \"Loading...\" : \"Login\"}\n//     </button>\n//     </div>\n//     <div>\n//         {errors.map((err) => (\n//         <error key={err}>{err}</error>\n//     ))}\n//     </div>\n// </form>\n// );\n// }\n\n// export default LoginForm;\n\nimport React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Redirect, Route } from \"react-router-dom\";\n\n\nfunction LoginForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const history = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => {\n          onLogin(user);\n        console.log(\"logged in\");\n        history.push(\"/ingredients\")\n      })\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit} >\n      <FormField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Button variant=\"fill\" color=\"primary\" type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Login\"}\n        </Button>\n      </FormField>\n      <FormField>\n        {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))}\n      </FormField>\n    </form>\n  );\n}\n\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}