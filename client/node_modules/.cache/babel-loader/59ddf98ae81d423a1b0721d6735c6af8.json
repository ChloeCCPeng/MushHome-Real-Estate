{"ast":null,"code":"var _jsxFileName = \"/Users/chloepeng/Development/Phase/Phase-5/Real-Estate-4/client/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport { UserContext } from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm({\n  onLogin\n}) {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const {\n    setCurrentUser\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    console.log('handleSubmit');\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(r => {\n      setIsLoading(false);\n\n      if (r.ok) {\n        r.json().then(user => {\n          onLogin(user);\n          console.log(\"logged in\");\n          navigate(\"/\");\n        });\n      } else {\n        r.json().then(err => setErrors(err.errors));\n      }\n    });\n  }\n\n  function handleLoginClick(e) {\n    e.preventDefault();\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    }).then(res => {\n      if (res.ok) {\n        res.json().then(currentUser => setCurrentUser(currentUser));\n      } else alert(\"Invalid login. Please try again.\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      handleLoginClick: handleLoginClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormField, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"username\",\n          autoComplete: \"off\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          class: \"text-black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          class: \"text-black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"fill\",\n          color: \"primary\",\n          type: \"submit\",\n          children: isLoading ? \"Loading...\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        children: errors.map(err => /*#__PURE__*/_jsxDEV(Error, {\n          children: err\n        }, err, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LoginForm, \"0IGPxJnTviIsp3yGnebKNWorpYg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/chloepeng/Development/Phase/Phase-5/Real-Estate-4/client/src/components/LoginForm.js"],"names":["React","useState","useContext","Button","Error","Input","FormField","Label","Link","useNavigate","Redirect","Route","NavBar","UserContext","LoginForm","onLogin","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","currentUser","setCurrentUser","navigate","handleSubmit","e","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","r","ok","json","user","err","handleLoginClick","res","alert","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport { UserContext } from './UserContext';\n\n\nfunction LoginForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { currentUser } = useContext (UserContext)\n  const { setCurrentUser } = useContext (UserContext)\n\n  const navigate = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    console.log('handleSubmit')\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => {\n          onLogin(user);\n        console.log(\"logged in\");\n        navigate(\"/\")\n      })\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  function handleLoginClick(e) {\n    e.preventDefault();\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((currentUser) => setCurrentUser(currentUser))\n      } else alert(\"Invalid login. Please try again.\")\n    })\n  }\n\n  return (\n    <>\n      <NavBar handleLoginClick={handleLoginClick}/>\n      <form onSubmit={handleSubmit} >\n        <FormField>\n          <Label htmlFor=\"username\">Username</Label>\n          <Input\n            type=\"text\"\n            id=\"username\"\n            autoComplete=\"off\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            class=\"text-black\"\n          />\n        </FormField>\n        <FormField>\n          <Label htmlFor=\"password\">Password</Label>\n          <Input\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            class=\"text-black\"\n          />\n        </FormField>\n        <FormField>\n          <Button variant=\"fill\" color=\"primary\" type=\"submit\">\n            {isLoading ? \"Loading...\" : \"Login\"}\n          </Button>\n        </FormField>\n        <FormField>\n          {errors.map((err) => (\n            <Error key={err}>{err}</Error>\n          ))}\n        </FormField>\n      </form>\n\n    </>\n  );\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}