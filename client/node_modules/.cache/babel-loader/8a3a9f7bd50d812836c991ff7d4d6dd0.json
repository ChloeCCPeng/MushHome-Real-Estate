{"ast":null,"code":"var _jsxFileName = \"/Users/chloepeng/Documents/GitHub/Real-Estate-4/client/src/components/NewHouseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams, Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewHouseForm({\n  list,\n  setList\n}) {\n  _s();\n\n  console.log(list);\n  const [isEdit, setIsEdit] = useState(false);\n  const [houses, setHouses] = useState([]);\n  const [formData, setFormData] = useState({\n    street: \"\",\n    city: \"\",\n    state: \"\",\n    postcde: \"\",\n    listPrice: 0,\n    house_id: 1\n  });\n  const navigate = useNavigate(); // const outlet = Outlet();\n\n  const {\n    id\n  } = useParams(); // useEffect(() => {\n  //       fetch(`http://localhost:3000/houses/${id}`)\n  //           .then(res => res.json())\n  //           .then(data => {\n  //               console.log(data)\n  //               setIsEdit(true);\n  //           })\n  // }, [houses])\n  // function newHouse(formData) {\n  //   // setLoading (true)\n  //   fetch(\"/houses\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(houseData)\n  //   })\n  //   .then(res => res.json())\n  //   .then(data => setList(data))\n  //   // .finally(() => setLoading (false))\n  // }\n\n  const houseList = houses.map(house => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: house.id,\n      children: house.name\n    }, house.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this);\n  }); // Create conditional title\n\n  const title = isEdit ? \"Edit Your Listing\" : \"List a New House\"; //Create conditional submit button text\n\n  const submit = isEdit ? \"Update Listing\" : \"Add to Market\"; //Create conditional delete button\n\n  const deleteButton = isEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: handleDelete,\n    children: \"Delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 31\n  }, this) : null;\n\n  function handleChange(e) {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleSubmit(e) {\n    console.log(formData);\n    e.preventDefault();\n    fetch(\"/houses\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(res => res.json()).then(data => setList(data)); // .finally(() => setLoading (false))\n  } //   if (outlet.path === \"/houses/:id/Edit\") {\n  //       fetch(`http://localhost:3000/houses/edit/${id}`, {\n  //           method: \"PATCH\",\n  //           headers: {\n  //               \"Content-Type\": \"application/json\",\n  //           },\n  //           body: JSON.stringify(formData),\n  //       })\n  //           .then((r) => r.json())\n  //           .then(data => navigate(\"/\"));\n  //   } else {\n  //       fetch(\"http://localhost:3000/houses/new\", {\n  //           method: \"POST\",\n  //           headers: {\n  //               \"Content-Type\": \"application/json\",\n  //           },\n  //           body: JSON.stringify(formData)\n  //       })\n  //           .then((r) => r.json())\n  //           .then(data => navigate(\"/\"));\n  //   }\n  // }\n\n\n  function handleDelete(e) {\n    fetch(`http://localhost:3000/houses/${id}`, {\n      method: \"DELETE\"\n    }).then(r => r.json()).then(deletedHouse => navigate(\"/\"));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"text-slate-400\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"bg-transparent\",\n            id: \"street\",\n            name: \"street\",\n            autoComplete: \"on\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"text-slate-400\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"bg-transparent\",\n            id: \"city\",\n            name: \"city\",\n            autoComplete: \"on\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"text-slate-400\",\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"bg-transparent\",\n            id: \"state\",\n            name: \"state\",\n            autoComplete: \"on\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"text-slate-400\",\n            children: \"List Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"bg-transparent\",\n            id: \"listPrice\",\n            name: \"listPrice\",\n            autoComplete: \"on\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"text-slate-400\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            class: \"bg-transparent\",\n            id: \"listPrice\",\n            name: \"listPrice\",\n            autoComplete: \"on\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"text-slate-400 btn btn-primary btn-block\",\n          type: \"submit\",\n          onChange: handleChange,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"text-slate-400 btn btn-primary btn-block\",\n          type: \"submit\",\n          onChange: handleChange,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewHouseForm, \"/GuDet4hQHadF/6xtiYfIyPG7Ss=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = NewHouseForm;\nexport default NewHouseForm; // import React, {useEffect, useState} from 'react'\n// import { useNavigate, useParams, useRouteMatch } from \"react-router-dom\";\n// import { NavLink } from \"react-router-dom\";\n//     useEffect(() => {\n//         fetch(\"http://localhost:4008/categories\")\n//             .then(r => r.json())\n//             .then(data => setCategories(data))\n//     }, [])\n//     useEffect(() => {\n//         if (match.path === \"/FoodForm/:id/Edit\") {\n//             fetch(`http://localhost:4008/foods/${id}`)\n//                 .then(res => res.json())\n//                 .then(data => {\n//                     setFormData(data)\n//                     setIsEdit(true);\n//                 })\n//         }\n//     }, [categories])\n// function NewHouseForm() {\n//   const [isEdit, setIsEdit] = useState(false);\n//   const [houses, setHouses] = useState([]);\n//   const [formData, setFormData] = useState({\n//       address: \"\",\n//       city: \"\",\n//       state: \"\",\n//       postcde: \"\",\n//       listPrice: \"\"\n//   });\n//   const [submitting, setSubmitting] = useState(false);\n//   const history = useHistory();\n//   const match = useRouteMatch();\n//   const { id } = useParams();\n//   // const handleSubmit = event => {\n//   //   event.preventDefault();\n//   // setSubmitting(true);\n//   // setTimeout(() => {\n//   //   setSubmitting(false);›\n//   // }, 3000)\n//   // }\n// function handleSubmit (e) {\n//   e.preventDefault();\n//   console.log('submit');\n//   fetch('http://localhost:3000/houses', {\n//     method: 'POST',\n//     headers: {\"Content-Type\" : \"application/json\"}\n//   })\n//   .then(res => res.json())\n//   .then((house)=> setSubmitting (house))\n// };\n// const handleChange =(e) => {\n//   e.preventDefault();\n//   console.log('change');\n// }\n// import React, { useEffect, useState } from \"react\";\n// import { useHistory, useParams, useRouteMatch } from \"react-router-dom\";\n// import Navbar from \"./Navbar\"\n// import { NavLink } from \"react-router-dom\";\n// function NewForm() {\n//     const [isEdit, setIsEdit] = useState(false);\n//     const [categories, setCategories] = useState([]);\n//     const [formData, setFormData] = useState({\n//         name: \"\",\n//         price: 0,\n//         category_id: 1,\n//         description: \"\"\n//     });\n//     const history = useHistory();\n//     const match = useRouteMatch();\n//     const { id } = useParams();\n//     useEffect(() => {\n//         fetch(\"http://localhost:4008/categories\")\n//             .then(r => r.json())\n//             .then(data => setCategories(data))\n//     }, [])\n//     useEffect(() => {\n//         if (match.path === \"/FoodForm/:id/Edit\") {\n//             fetch(`http://localhost:4008/foods/${id}`)\n//                 .then(res => res.json())\n//                 .then(data => {\n//                     setFormData(data)\n//                     setIsEdit(true);\n//                 })\n//         }\n//     }, [categories])\n//     const categoryList = categories.map(category => {\n//         return <option key={category.id} value={category.id}>{category.name}</option>\n//     })\n//     // Create conditional title\n//     const title = isEdit ? \"Edit Menu Item\" : \"Add New Menu Item\"\n//     //Create conditional submit button text\n//     const submit = isEdit ? \"Update Item\" : \"Add to Menu\"\n//     //Create conditional delete button\n//     const deleteButton = isEdit ? <button className=\"bg-gray-50 backdrop-blur-lg bg-opacity-30 text-black font-bold py-2 px-4 border-b-4 hover:scale-110 rounded-full\" type=\"button\" onClick={handleDelete}>Delete</button> : null\n//     function handleChange(e) {\n//         setFormData({\n//             ...formData,\n//             [e.target.name]: e.target.value\n//         })\n//     }\n//     function handleSubmit(e) {\n//         e.preventDefault()\n//         if (match.path === \"/FoodForm/:id/Edit\") {\n//             fetch(`http://localhost:4008/foods/edit/${id}`, {\n//                 method: \"PATCH\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                 },\n//                 body: JSON.stringify(formData),\n//             })\n//                 .then((r) => r.json())\n//                 .then(data => history.push(\"/menu\"));\n//         } else {\n//             fetch(\"http://localhost:4008/foods/new\", {\n//                 method: \"POST\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                 },\n//                 body: JSON.stringify(formData)\n//             })\n//                 .then((r) => r.json())\n//                 .then(data => history.push(\"/menu\"));\n//         }\n//     }\n//     function handleDelete(e) {\n//         fetch(`http://localhost:4008/foods/${id}`, {\n//             method: \"DELETE\",\n//         })\n//             .then((r) => r.json())\n//             .then((deletedFood) => history.push(\"/menu\"));\n//     }\n//   return (\n//     <div>\n//       <h1>List a House</h1>\n//         <div className=\"container\">\n//         {submitting &&\n//        <div>Listing a House...</div>\n//      }\n//           <form onSubmit={handleSubmit}>\n//               <div>\n//                   <label class=\"text-slate-400\" >Address</label>\n//                   <input type=\"text\" class=\"bg-transparent\" id=\"address\" name=\"address\" autoComplete=\"on\" onChange={handleChange}/>\n//               </div>\n//               <div>\n//                   <label class=\"text-slate-400\">City</label>\n//                   <input type=\"text\" class=\"bg-transparent\" id=\"city\" name=\"city\" autoComplete=\"on\" onChange={handleChange}/>\n//               </div>\n//               <div>\n//                   <label class=\"text-slate-400\">State</label>\n//                   <input type=\"text\" class=\"bg-transparent\" id=\"state\" name=\"state\" autoComplete=\"on\" onChange={handleChange}/>\n//               </div>\n//               <div>\n//                   <label class=\"text-slate-400\">List Price</label>\n//                   <input type=\"text\" class=\"bg-transparent\" id=\"listPrice\" name=\"listPrice\" autoComplete=\"on\" onChange={handleChange}/>\n//               </div>\n//               <div>\n//                   <label class=\"text-slate-400\">Email</label>\n//                   <input type=\"email\" class=\"bg-transparent\" id=\"listPrice\" name=\"listPrice\" autoComplete=\"on\" onChange={handleChange}/>\n//               </div>\n//               <button class=\"text-slate-400 btn btn-primary btn-block\" type=\"submit\"  onChange={handleChange}>List</button>\n//           </form>\n//         </div>\n//     </div>\n//   )\n// }\n// export default NewHouseForm\n\nvar _c;\n\n$RefreshReg$(_c, \"NewHouseForm\");","map":{"version":3,"sources":["/Users/chloepeng/Documents/GitHub/Real-Estate-4/client/src/components/NewHouseForm.js"],"names":["React","useEffect","useState","useNavigate","useParams","Outlet","NewHouseForm","list","setList","console","log","isEdit","setIsEdit","houses","setHouses","formData","setFormData","street","city","state","postcde","listPrice","house_id","navigate","id","houseList","map","house","name","title","submit","deleteButton","handleDelete","handleChange","e","target","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","r","deletedHouse"],"mappings":"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":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams, Outlet } from \"react-router-dom\";\n\nfunction NewHouseForm({list,setList}) {\n\n  console.log(list)\n\n  const [isEdit, setIsEdit] = useState(false);\n  const [houses, setHouses] = useState([]);\n  const [formData, setFormData] = useState({\n      street: \"\",\n      city: \"\",\n      state: \"\",\n      postcde: \"\",\n      listPrice: 0,\n      house_id: 1\n  });\n\n  const navigate = useNavigate();\n  // const outlet = Outlet();\n  const { id } = useParams();\n\n// useEffect(() => {\n//       fetch(`http://localhost:3000/houses/${id}`)\n//           .then(res => res.json())\n//           .then(data => {\n//               console.log(data)\n//               setIsEdit(true);\n//           })\n// }, [houses])\n\n// function newHouse(formData) {\n//   // setLoading (true)\n//   fetch(\"/houses\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(houseData)\n//   })\n//   .then(res => res.json())\n//   .then(data => setList(data))\n//   // .finally(() => setLoading (false))\n// }\n\n\nconst houseList = houses.map(house => {\n  return <option key={house.id} value={house.id}>{house.name}</option>\n})\n\n// Create conditional title\nconst title = isEdit ? \"Edit Your Listing\" : \"List a New House\"\n\n//Create conditional submit button text\nconst submit = isEdit ? \"Update Listing\" : \"Add to Market\"\n\n//Create conditional delete button\nconst deleteButton = isEdit ? <button  type=\"button\" onClick={handleDelete}>Delete</button> : null\n\nfunction handleChange(e) {\n  setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n  })\n}\n\nfunction handleSubmit(e) {\n  console.log(formData)\n  e.preventDefault()\n  fetch(\"/houses\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(formData)\n  })\n  .then(res => res.json())\n  .then(data => setList(data))\n  // .finally(() => setLoading (false))\n}\n//   if (outlet.path === \"/houses/:id/Edit\") {\n//       fetch(`http://localhost:3000/houses/edit/${id}`, {\n//           method: \"PATCH\",\n//           headers: {\n//               \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify(formData),\n//       })\n//           .then((r) => r.json())\n//           .then(data => navigate(\"/\"));\n//   } else {\n//       fetch(\"http://localhost:3000/houses/new\", {\n//           method: \"POST\",\n//           headers: {\n//               \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify(formData)\n//       })\n//           .then((r) => r.json())\n//           .then(data => navigate(\"/\"));\n//   }\n// }\n\nfunction handleDelete(e) {\n  fetch(`http://localhost:3000/houses/${id}`, {\n      method: \"DELETE\",\n  })\n      .then((r) => r.json())\n      .then((deletedHouse) => navigate(\"/\"));\n}\n\n  return (\n    <div>\n      <h1>{title}</h1>\n\n        <div className=\"container\">\n          <form onSubmit={handleSubmit}>\n              <div>\n                  <label class=\"text-slate-400\" >Address</label>\n                  <input type=\"text\" class=\"bg-transparent\" id=\"street\" name=\"street\" autoComplete=\"on\" onChange={handleChange}/>\n              </div>\n              <div>\n                  <label class=\"text-slate-400\">City</label>\n                  <input type=\"text\" class=\"bg-transparent\" id=\"city\" name=\"city\" autoComplete=\"on\" onChange={handleChange}/>\n              </div>\n              <div>\n                  <label class=\"text-slate-400\">State</label>\n                  <input type=\"text\" class=\"bg-transparent\" id=\"state\" name=\"state\" autoComplete=\"on\" onChange={handleChange}/>\n              </div>\n              <div>\n                  <label class=\"text-slate-400\">List Price</label>\n                  <input type=\"text\" class=\"bg-transparent\" id=\"listPrice\" name=\"listPrice\" autoComplete=\"on\" onChange={handleChange}/>\n              </div>\n              <div>\n                  <label class=\"text-slate-400\">Email</label>\n                  <input type=\"email\" class=\"bg-transparent\" id=\"listPrice\" name=\"listPrice\" autoComplete=\"on\" onChange={handleChange}/>\n              </div>\n              <button class=\"text-slate-400 btn btn-primary btn-block\" type=\"submit\"  onChange={handleChange}>Edit</button>\n              <button class=\"text-slate-400 btn btn-primary btn-block\" type=\"submit\"  onChange={handleChange}>Delete</button>\n          </form>\n        </div>\n    </div>\n  )\n}\n\nexport default NewHouseForm\n\n\n\n// import React, {useEffect, useState} from 'react'\n// import { useNavigate, useParams, useRouteMatch } from \"react-router-dom\";\n// import { NavLink } from \"react-router-dom\";\n\n//     useEffect(() => {\n//         fetch(\"http://localhost:4008/categories\")\n//             .then(r => r.json())\n//             .then(data => setCategories(data))\n//     }, [])\n\n//     useEffect(() => {\n//         if (match.path === \"/FoodForm/:id/Edit\") {\n//             fetch(`http://localhost:4008/foods/${id}`)\n//                 .then(res => res.json())\n//                 .then(data => {\n//                     setFormData(data)\n//                     setIsEdit(true);\n//                 })\n//         }\n//     }, [categories])\n    \n\n// function NewHouseForm() {\n\n//   const [isEdit, setIsEdit] = useState(false);\n//   const [houses, setHouses] = useState([]);\n//   const [formData, setFormData] = useState({\n//       address: \"\",\n//       city: \"\",\n//       state: \"\",\n//       postcde: \"\",\n//       listPrice: \"\"\n//   });\n\n//   const [submitting, setSubmitting] = useState(false);\n//   const history = useHistory();\n//   const match = useRouteMatch();\n//   const { id } = useParams();\n\n//   // const handleSubmit = event => {\n//   //   event.preventDefault();\n//   // setSubmitting(true);\n\n//   // setTimeout(() => {\n//   //   setSubmitting(false);›\n//   // }, 3000)\n//   // }\n\n// function handleSubmit (e) {\n//   e.preventDefault();\n//   console.log('submit');\n//   fetch('http://localhost:3000/houses', {\n//     method: 'POST',\n//     headers: {\"Content-Type\" : \"application/json\"}\n//   })\n//   .then(res => res.json())\n//   .then((house)=> setSubmitting (house))\n// };\n\n\n// const handleChange =(e) => {\n//   e.preventDefault();\n//   console.log('change');\n// }\n\n\n// import React, { useEffect, useState } from \"react\";\n// import { useHistory, useParams, useRouteMatch } from \"react-router-dom\";\n// import Navbar from \"./Navbar\"\n// import { NavLink } from \"react-router-dom\";\n\n\n// function NewForm() {\n//     const [isEdit, setIsEdit] = useState(false);\n//     const [categories, setCategories] = useState([]);\n//     const [formData, setFormData] = useState({\n//         name: \"\",\n//         price: 0,\n//         category_id: 1,\n//         description: \"\"\n//     });\n\n//     const history = useHistory();\n//     const match = useRouteMatch();\n//     const { id } = useParams();\n\n//     useEffect(() => {\n//         fetch(\"http://localhost:4008/categories\")\n//             .then(r => r.json())\n//             .then(data => setCategories(data))\n//     }, [])\n\n//     useEffect(() => {\n//         if (match.path === \"/FoodForm/:id/Edit\") {\n//             fetch(`http://localhost:4008/foods/${id}`)\n//                 .then(res => res.json())\n//                 .then(data => {\n//                     setFormData(data)\n//                     setIsEdit(true);\n//                 })\n//         }\n//     }, [categories])\n\n//     const categoryList = categories.map(category => {\n//         return <option key={category.id} value={category.id}>{category.name}</option>\n//     })\n\n//     // Create conditional title\n//     const title = isEdit ? \"Edit Menu Item\" : \"Add New Menu Item\"\n\n//     //Create conditional submit button text\n//     const submit = isEdit ? \"Update Item\" : \"Add to Menu\"\n    \n//     //Create conditional delete button\n//     const deleteButton = isEdit ? <button className=\"bg-gray-50 backdrop-blur-lg bg-opacity-30 text-black font-bold py-2 px-4 border-b-4 hover:scale-110 rounded-full\" type=\"button\" onClick={handleDelete}>Delete</button> : null\n\n//     function handleChange(e) {\n//         setFormData({\n//             ...formData,\n//             [e.target.name]: e.target.value\n//         })\n//     }\n\n//     function handleSubmit(e) {\n//         e.preventDefault()\n//         if (match.path === \"/FoodForm/:id/Edit\") {\n//             fetch(`http://localhost:4008/foods/edit/${id}`, {\n//                 method: \"PATCH\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                 },\n//                 body: JSON.stringify(formData),\n//             })\n//                 .then((r) => r.json())\n//                 .then(data => history.push(\"/menu\"));\n//         } else {\n//             fetch(\"http://localhost:4008/foods/new\", {\n//                 method: \"POST\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                 },\n//                 body: JSON.stringify(formData)\n//             })\n//                 .then((r) => r.json())\n//                 .then(data => history.push(\"/menu\"));\n//         }\n//     }\n\n//     function handleDelete(e) {\n//         fetch(`http://localhost:4008/foods/${id}`, {\n//             method: \"DELETE\",\n//         })\n//             .then((r) => r.json())\n//             .then((deletedFood) => history.push(\"/menu\"));\n//     }\n\n    \n//   return (\n//     <div>\n//       <h1>List a House</h1>\n//         <div className=\"container\">\n//         {submitting &&\n//        <div>Listing a House...</div>\n//      }\n//           <form onSubmit={handleSubmit}>\n//               <div>\n//                   <label class=\"text-slate-400\" >Address</label>\n//                   <input type=\"text\" class=\"bg-transparent\" id=\"address\" name=\"address\" autoComplete=\"on\" onChange={handleChange}/>\n//               </div>\n//               <div>\n//                   <label class=\"text-slate-400\">City</label>\n//                   <input type=\"text\" class=\"bg-transparent\" id=\"city\" name=\"city\" autoComplete=\"on\" onChange={handleChange}/>\n//               </div>\n//               <div>\n//                   <label class=\"text-slate-400\">State</label>\n//                   <input type=\"text\" class=\"bg-transparent\" id=\"state\" name=\"state\" autoComplete=\"on\" onChange={handleChange}/>\n//               </div>\n//               <div>\n//                   <label class=\"text-slate-400\">List Price</label>\n//                   <input type=\"text\" class=\"bg-transparent\" id=\"listPrice\" name=\"listPrice\" autoComplete=\"on\" onChange={handleChange}/>\n//               </div>\n//               <div>\n//                   <label class=\"text-slate-400\">Email</label>\n//                   <input type=\"email\" class=\"bg-transparent\" id=\"listPrice\" name=\"listPrice\" autoComplete=\"on\" onChange={handleChange}/>\n//               </div>\n//               <button class=\"text-slate-400 btn btn-primary btn-block\" type=\"submit\"  onChange={handleChange}>List</button>\n//           </form>\n//         </div>\n//     </div>\n//   )\n// }\n\n// export default NewHouseForm"]},"metadata":{},"sourceType":"module"}