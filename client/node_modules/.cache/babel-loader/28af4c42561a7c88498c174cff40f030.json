{"ast":null,"code":"var _jsxFileName = \"/Users/chloepeng/Documents/GitHub/Real-Estate-4/client/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// // import { button, error, input, div, label } from \"../styles/button\";\n// import { createBrowserHistory } from 'history';\n// import { Link, useNavigate, Redirect, Route } from \"react-router-dom\";\n// function LoginForm({ onLogin }) {\n// const [username, setUsername] = useState(\"\");\n// const [password, setPassword] = useState(\"\");\n// const [errors, setErrors] = useState([]);\n// const [isLoading, setIsLoading] = useState(false);\n// const history = createBrowserHistory();\n// function handleSubmit(e) {\n// e.preventDefault();\n// setIsLoading(true);\n// fetch(\"/login\", {\n//     method: \"POST\",\n//     headers: {\n//     \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify({ username, password }),\n// }).then((r) => {\n//     setIsLoading(false);\n//     if (r.ok) {\n//     r.json().then((user) => {\n//         onLogin(user);\n//   return history.push(\"/\")\n//     })\n//     } else {\n//     r.json().then((err) => setErrors(err.errors));\n//     }\n// });\n// }\n// return (\n// <form onSubmit={handleSubmit} >\n//     <div>\n//     <label htmlFor=\"username\">Username</label>\n//     <input\n//         type=\"text\"\n//         id=\"username\"\n//         autoComplete=\"off\"\n//         value={username}\n//         onChange={(e) => setUsername(e.target.value)}\n//     />\n//     </div>\n//     <div>\n//     <label For=\"password\">Password</label>\n//     <input\n//         type=\"password\"\n//         id=\"password\"\n//         autoComplete=\"current-password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//     />\n//     </div>\n//     <div>\n//     <button variant=\"fill\" color=\"primary\" type=\"submit\">\n//         {isLoading ? \"Loading...\" : \"Login\"}\n//     </button>\n//     </div>\n//     <div>\n//         {errors.map((err) => (\n//         <error key={err}>{err}</error>\n//     ))}\n//     </div>\n// </form>\n// );\n// }\n// export default LoginForm;\nimport React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm(_ref) {\n  _s();\n\n  let {\n    onLogin\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(r => {\n      setIsLoading(false);\n\n      if (r.ok) {\n        r.json().then(user => {\n          onLogin(user);\n          console.log(\"logged in\");\n          history.push(\"/ingredients\");\n        });\n      } else {\n        r.json().then(err => setErrors(err.errors));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"username\",\n        autoComplete: \"off\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"fill\",\n        color: \"primary\",\n        type: \"submit\",\n        children: isLoading ? \"Loading...\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: errors.map(err => /*#__PURE__*/_jsxDEV(Error, {\n        children: err\n      }, err, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"o+0ABpcpVVtfcOs1e6+99Y1+OhM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Button","Error","Input","FormField","Label","Link","useNavigate","Redirect","Route","LoginForm","onLogin","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","history","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","ok","json","user","console","log","push","err","target","value","map"],"sources":["/Users/chloepeng/Documents/GitHub/Real-Estate-4/client/src/components/LoginForm.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// // import { button, error, input, div, label } from \"../styles/button\";\n// import { createBrowserHistory } from 'history';\n// import { Link, useNavigate, Redirect, Route } from \"react-router-dom\";\n\n// function LoginForm({ onLogin }) {\n// const [username, setUsername] = useState(\"\");\n// const [password, setPassword] = useState(\"\");\n// const [errors, setErrors] = useState([]);\n// const [isLoading, setIsLoading] = useState(false);\n\n// const history = createBrowserHistory();\n\n// function handleSubmit(e) {\n// e.preventDefault();\n// setIsLoading(true);\n// fetch(\"/login\", {\n//     method: \"POST\",\n//     headers: {\n//     \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify({ username, password }),\n// }).then((r) => {\n//     setIsLoading(false);\n//     if (r.ok) {\n//     r.json().then((user) => {\n//         onLogin(user);\n//   return history.push(\"/\")\n//     })\n//     } else {\n//     r.json().then((err) => setErrors(err.errors));\n//     }\n// });\n// }\n\n// return (\n// <form onSubmit={handleSubmit} >\n//     <div>\n//     <label htmlFor=\"username\">Username</label>\n//     <input\n//         type=\"text\"\n//         id=\"username\"\n//         autoComplete=\"off\"\n//         value={username}\n//         onChange={(e) => setUsername(e.target.value)}\n//     />\n//     </div>\n//     <div>\n//     <label For=\"password\">Password</label>\n//     <input\n//         type=\"password\"\n//         id=\"password\"\n//         autoComplete=\"current-password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//     />\n//     </div>\n//     <div>\n//     <button variant=\"fill\" color=\"primary\" type=\"submit\">\n//         {isLoading ? \"Loading...\" : \"Login\"}\n//     </button>\n//     </div>\n//     <div>\n//         {errors.map((err) => (\n//         <error key={err}>{err}</error>\n//     ))}\n//     </div>\n// </form>\n// );\n// }\n\n// export default LoginForm;\n\nimport React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Redirect, Route } from \"react-router-dom\";\n\n\nfunction LoginForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const history = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => {\n          onLogin(user);\n        console.log(\"logged in\");\n        history.push(\"/ingredients\")\n      })\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit} >\n      <FormField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Button variant=\"fill\" color=\"primary\" type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Login\"}\n        </Button>\n      </FormField>\n      <FormField>\n        {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))}\n      </FormField>\n    </form>\n  );\n}\n\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}